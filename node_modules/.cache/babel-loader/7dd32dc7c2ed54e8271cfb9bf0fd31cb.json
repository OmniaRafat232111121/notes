{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateNotes = _ref => {\n  _s();\n\n  let {\n    notes,\n    setNotes\n  } = _ref;\n  const [error, setError] = React.useState(\"\");\n  const titleRef = React.useRef(null);\n  const textRef = React.useRef(null);\n  const colorRef = React.useRef(null);\n\n  const handleSubmit = e => {\n    var _titleRef$current, _textRef$current;\n\n    e.preventDefault();\n\n    if (((_titleRef$current = titleRef.current) === null || _titleRef$current === void 0 ? void 0 : _titleRef$current.value) === \"\" || ((_textRef$current = textRef.current) === null || _textRef$current === void 0 ? void 0 : _textRef$current.value) === \"\") {\n      return setError(\"All fields are mandatory\");\n    }\n\n    setError(\"\");\n    setNotes([...notes, {\n      id: new Date().toString(),\n      title: titleRef.current.value,\n      text: textRef.current.value,\n      color: colorRef.current.value,\n      date: new Date().toString()\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(CreateNotes, \"IVJmZEQRDDjlPPBZscNLMV8zrN4=\");\n\n_c = CreateNotes;\nexport default CreateNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNotes\");","map":{"version":3,"names":["React","CreateNotes","notes","setNotes","error","setError","useState","titleRef","useRef","textRef","colorRef","handleSubmit","e","preventDefault","current","value","id","Date","toString","title","text","color","date"],"sources":["C:/Users/Meme/Desktop/reacttypescript/react-typescript-notesapp/src/components/CreateNotes.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap'\r\n\r\ninterface ICreateNotesProps {\r\n    notes: Note[],\r\n    setNotes:React.Dispatch<React.SetStateAction<Note[]>>\r\n}\r\n\r\nconst CreateNotes: React.FunctionComponent<ICreateNotesProps> = ({notes,setNotes}) => {\r\n    const [error, setError] = React.useState<string>(\"\");\r\n    const titleRef = React.useRef<HTMLInputElement | null>(null);\r\n    const textRef = React.useRef<HTMLTextAreaElement | null>(null);\r\n    const colorRef = React.useRef<HTMLInputElement | null>(null);\r\n\r\n    const handleSubmit = (e:React.FormEvent<HTMLFormElement>): void => {\r\n        e.preventDefault();\r\n        if (titleRef.current?.value === \"\" || textRef.current?.value === \"\") {\r\n            return setError(\"All fields are mandatory\");\r\n        }\r\n        setError(\"\");\r\n        setNotes([...notes, {\r\n            id: (new Date()).toString(),\r\n            title: (titleRef.current as HTMLInputElement).value,\r\n            text: (textRef.current as HTMLTextAreaElement).value,\r\n            color: (colorRef.current as HTMLInputElement).value,\r\n            date: (new Date()).toString()\r\n        }]);\r\n        \r\n    }\r\n  return (\r\n<>\r\n\r\n</>\r\n  );\r\n};\r\n\r\nexport default CreateNotes;\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AASA,MAAMC,WAAuD,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAACC,KAAD;IAAOC;EAAP,CAAqB;EAClF,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAuB,EAAvB,CAA1B;EACA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAsC,IAAtC,CAAjB;EACA,MAAMC,OAAO,GAAGT,KAAK,CAACQ,MAAN,CAAyC,IAAzC,CAAhB;EACA,MAAME,QAAQ,GAAGV,KAAK,CAACQ,MAAN,CAAsC,IAAtC,CAAjB;;EAEA,MAAMG,YAAY,GAAIC,CAAD,IAA8C;IAAA;;IAC/DA,CAAC,CAACC,cAAF;;IACA,IAAI,sBAAAN,QAAQ,CAACO,OAAT,wEAAkBC,KAAlB,MAA4B,EAA5B,IAAkC,qBAAAN,OAAO,CAACK,OAAR,sEAAiBC,KAAjB,MAA2B,EAAjE,EAAqE;MACjE,OAAOV,QAAQ,CAAC,0BAAD,CAAf;IACH;;IACDA,QAAQ,CAAC,EAAD,CAAR;IACAF,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;MAChBc,EAAE,EAAG,IAAIC,IAAJ,EAAD,CAAaC,QAAb,EADY;MAEhBC,KAAK,EAAGZ,QAAQ,CAACO,OAAV,CAAuCC,KAF9B;MAGhBK,IAAI,EAAGX,OAAO,CAACK,OAAT,CAAyCC,KAH/B;MAIhBM,KAAK,EAAGX,QAAQ,CAACI,OAAV,CAAuCC,KAJ9B;MAKhBO,IAAI,EAAG,IAAIL,IAAJ,EAAD,CAAaC,QAAb;IALU,CAAX,CAAD,CAAR;EAQH,CAdD;;EAeF,oBACF,qCADE;AAKD,CA1BD;;GAAMjB,W;;KAAAA,W;AA4BN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}